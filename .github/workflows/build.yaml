name: GitHub Actions - Build Branch
env:
  ARGO_NAMESPACE: argo
  ARGO_VERSION: v3.1.11
  GITREPO_URL: ssh://git@<GITHUB_HOST>/<GITHUB_OWNER>/metaphor.git
  CI_PROJECT_NAME: metaphor

on:
 push:
   branches:
     - '**'
     - '!main'

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Define Arch arm64
        if: "${{ runner.arch == 'ARM64' }}"
        shell: bash
        run: |
          echo "Setting arch to ARM64"
          ARCH=arm64
          echo "ARCH=$ARCH" >> $GITHUB_ENV
      - name: Define Arch amd64
        if: "${{ runner.arch == 'X64' }}"
        shell: bash
        run: |
          echo "Setting arch to amd64"
          ARCH=amd64
          echo "ARCH=$ARCH" >> $GITHUB_ENV          
      - name: Setup Runner for Argo
        env: 
          ARCH: ${{ env.ARCH }}
        run: |
            cd $HOME
            echo "Install argo on $ARCH"    
            # Download the binary
            curl -sLO https://github.com/argoproj/argo-workflows/releases/download/${ARGO_VERSION}/argo-linux-$ARCH.gz
            # Unzip
            gunzip argo-linux-$ARCH.gz
            # Make binary executable
            chmod +x argo-linux-$ARCH
            # Move binary to path
            sudo mv ./argo-linux-$ARCH /usr/local/bin/argo
            # Test installation
            argo version --short            
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo ${GITHUB_REPOSITORY#*/}
      - run: echo ${GITHUB_SERVER_URL:8}
      - run: echo ${GITREPO_URL}      
      - name: build
        run: |
          argo version --short   
          argo submit .argo/npm-run.yaml \
          --generate-name="${CI_PROJECT_NAME}-build-${GITHUB_SHA:7}" \
          --serviceaccount=argo \
          -p appName="${GITHUB_REPOSITORY#*/}" \
          -p branch="${GITHUB_REF_NAME}" \
          -p gitRepoUrl="${GITREPO_URL}" \
          -p npmScriptName="build" \
          --wait --log -v         
      - run: echo "üçè This job's status is ${{ job.status }}."     
